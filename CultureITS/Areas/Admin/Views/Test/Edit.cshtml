@model CultureITS.Areas.Admin.Models.TestViewModel

@{
    ViewBag.Title = "Работа с тестом";
    ViewBag.BreadCrumbs = new CultureITS.Helpers.BreadCrumbsBuilder()
        .Add(new CultureITS.Helpers.BreadCrumb() { Text = "Управление", Uri = @Url.Action("Index", "Home", new { area = "Admin" }) })
        .Add(new CultureITS.Helpers.BreadCrumb() { Text = "Тесты", Uri = @Url.Action("Index", "Test", new { area = "Admin" }) })
        .Generate(ViewBag.Title);
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Item.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Item.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Item.Title)
            @Html.ValidationMessageFor(model => model.Item.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Item.Code)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Item.Code)
            @Html.ValidationMessageFor(model => model.Item.Code)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Item.Topic)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Item.Topic)
            @Html.ValidationMessageFor(model => model.Item.Topic)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Item.Author)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Item.Author)
            @Html.ValidationMessageFor(model => model.Item.Author)
        </div>
    
    <hr />
    <p>
        <button class="button">Отправить</button>
        @Html.ActionLink("Вернуться", "Index", null, new { @class = "button" })
    </p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}