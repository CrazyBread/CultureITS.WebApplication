@model CultureITS.Areas.Admin.Models.UserViewModel

@{
    ViewBag.Title = "Управление пользователем";
    ViewBag.BreadCrumbs = new CultureITS.Helpers.BreadCrumbsBuilder()
        .Add(new CultureITS.Helpers.BreadCrumb() { Text = "Управление", Uri = @Url.Action("Index", "Home", new { area = "Admin" }) })
        .Add(new CultureITS.Helpers.BreadCrumb() { Text = "Пользователи", Uri = @Url.Action("Index", "User", new { area = "Admin" }) })
        .Generate(ViewBag.Title);

}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(i => i.Item.Id)

    <h3 class="headline">Основная информация</h3>

    <div class="editor-label">
        @Html.LabelFor(model => model.Item.Login)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Item.Login)
        @Html.ValidationMessageFor(model => model.Item.Login)
    </div>

    if (Model.Item.Id == 0)
    {
    <div class="editor-label">
        @Html.LabelFor(model => model.Item.Password)
    </div>
    <div class="editor-field">
        @Html.PasswordFor(model => model.Item.Password)
        @Html.ValidationMessageFor(model => model.Item.Password)
    </div>
    }

    <div class="editor-label">
        @Html.LabelFor(model => model.Item.Name)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Item.Name)
        @Html.ValidationMessageFor(model => model.Item.Name)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Item.UserRole)
    </div>
    <div class="editor-field">
        @Html.EnumDropDownListFor(model => model.Item.UserRole)
        @Html.ValidationMessageFor(model => model.Item.UserRole)
    </div>
    <hr />
    
    <h3 class="headline">Дополнительная информация</h3>
    <div id="AdditionalInfo">
        <div id="StudentInfo" class="none">
            <div class="editor-label">
                @Html.LabelFor(model => (model.Item as CultureITS.Models.Student).Age)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => (model.Item as CultureITS.Models.Student).Age)
                @Html.ValidationMessageFor(model => (model.Item as CultureITS.Models.Student).Age)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => (model.Item as CultureITS.Models.Student).Group)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => (model.Item as CultureITS.Models.Student).Group)
                @Html.ValidationMessageFor(model => (model.Item as CultureITS.Models.Student).Group)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => (model.Item as CultureITS.Models.Student).Course)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => (model.Item as CultureITS.Models.Student).Course)
                @Html.ValidationMessageFor(model => (model.Item as CultureITS.Models.Student).Course)
            </div>
        </div>

        <div id="TeacherInfo" class="none">
            <div class="editor-label">
                @Html.LabelFor(model => (model.Item as CultureITS.Models.Teacher).University)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => (model.Item as CultureITS.Models.Teacher).University)
                @Html.ValidationMessageFor(model => (model.Item as CultureITS.Models.Teacher).University)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => (model.Item as CultureITS.Models.Teacher).Department)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => (model.Item as CultureITS.Models.Teacher).Department)
                @Html.ValidationMessageFor(model => (model.Item as CultureITS.Models.Teacher).Department)
            </div>
        </div>

        <div id="AdminInfo" class="none">
            <div class="editor-label">
                @Html.LabelFor(model => (model.Item as CultureITS.Models.Administrator).Email)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => (model.Item as CultureITS.Models.Administrator).Email)
                @Html.ValidationMessageFor(model => (model.Item as CultureITS.Models.Administrator).Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => (model.Item as CultureITS.Models.Administrator).Telephone)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => (model.Item as CultureITS.Models.Administrator).Telephone)
                @Html.ValidationMessageFor(model => (model.Item as CultureITS.Models.Administrator).Telephone)
            </div>
        </div>
    </div>
    
    <hr />
    <p>
        <button class="button">Отправить</button>
        @Html.ActionLink("Вернуться", "Index", null, new { @class = "button" })
    </p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            $('#Item_UserRole').change(function () {
                $('#AdditionalInfo > div').hide();

                if ($(this).val() === '@CultureITS.Models.AccountStatus.Admin')
                    $('#AdminInfo').show();
                if ($(this).val() === '@CultureITS.Models.AccountStatus.Teacher')
                    $('#TeacherInfo').show();
                if ($(this).val() === '@CultureITS.Models.AccountStatus.Student')
                    $('#StudentInfo').show();
            }).change();

            if(@Model.Item.Id > 0)
                $('#Item_UserRole').prop('disabled', true);
        });
    </script>
}
